diff --git a/catalog.c b/catalog.c
index b7837e3d..d0fa3486 100644
--- a/catalog.c
+++ b/catalog.c
@@ -75,6 +75,10 @@
 #endif
 
 #if defined(_WIN32) && defined(_MSC_VER)
+#include <winapifamily.h>
+#if defined(WINAPI_FAMILY_PARTITION) && WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP) && !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
+#define getenv(x) NULL
+#endif
 #undef XML_XML_DEFAULT_CATALOG
 static char XML_XML_DEFAULT_CATALOG[256] = "file://" SYSCONFDIR "/xml/catalog";
 #if !defined(_WINDOWS_)
@@ -3117,12 +3121,17 @@ xmlInitializeCatalog(void) {
 
 	catalogs = (const char *) getenv("XML_CATALOG_FILES");
 	if (catalogs == NULL)
-#if defined(_WIN32) && defined(_MSC_VER)
+#if defined(_WIN32) && defined(_MSC_VER) && (!defined(WINAPI_FAMILY_PARTITION) || !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP) || WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP))
     {
 		void* hmodule;
-		hmodule = GetModuleHandleA("libxml2.dll");
+#   ifdef _DEBUG
+#       define LIBXML2_MODULE L"xml2d.dll"
+#   else
+#       define LIBXML2_MODULE L"xml2.dll"
+#   endif
+        hmodule = GetModuleHandleW(LIBXML2_MODULE);
 		if (hmodule == NULL)
-			hmodule = GetModuleHandleA(NULL);
+			hmodule = GetModuleHandleW(NULL);
 		if (hmodule != NULL) {
 			char buf[256];
 			unsigned long len = GetModuleFileNameA(hmodule, buf, 255);
diff --git a/libxml.h b/libxml.h
index 66f164d5..ff95641c 100644
--- a/libxml.h
+++ b/libxml.h
@@ -34,6 +34,7 @@
 #ifndef SYSCONFDIR
   #define SYSCONFDIR "/etc"
 #endif
+#include <libxml/xmlstring.h>
 
 #if defined(__Lynx__)
 #include <stdio.h> /* pull definition of size_t */
diff --git a/nanohttp.c b/nanohttp.c
index 2eafd3f4..44be166f 100644
--- a/nanohttp.c
+++ b/nanohttp.c
@@ -70,6 +70,13 @@
 #include <wsockcompat.h>
 #endif
 
+#if defined(_WIN32) && defined(_MSC_VER)
+#include <winapifamily.h>
+#if defined(WINAPI_FAMILY_PARTITION) && WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP) && !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
+#define getenv(x) NULL
+#endif
+#endif
+
 #include <libxml/globals.h>
 #include <libxml/xmlerror.h>
 #include <libxml/xmlmemory.h>
diff --git a/win32/libxml2.def.src b/win32/libxml2.def.src
index d83dbf4a..3ed86578 100644
--- a/win32/libxml2.def.src
+++ b/win32/libxml2.def.src
@@ -5,7 +5,7 @@ EXPORTS
 #ifdef LIBXML_REGEXP_ENABLED
 emptyExp DATA
 #endif
-#ifdef LIBXML_REGEXP_ENABLED
+#ifdef LIBXML_EXPR_ENABLED
 forbiddenExp DATA
 #endif
 #ifdef LIBXML_THREAD_ENABLED
@@ -758,61 +758,61 @@ xmlEncodeEntities
 xmlEncodeEntitiesReentrant
 xmlEncodeSpecialChars
 xmlErrMemory
-#ifdef LIBXML_REGEXP_ENABLED
+#ifdef LIBXML_EXPR_ENABLED
 xmlExpCtxtNbCons
 #endif
-#ifdef LIBXML_REGEXP_ENABLED
+#ifdef LIBXML_EXPR_ENABLED
 xmlExpCtxtNbNodes
 #endif
-#ifdef LIBXML_REGEXP_ENABLED
+#ifdef LIBXML_EXPR_ENABLED
 xmlExpDump
 #endif
-#ifdef LIBXML_REGEXP_ENABLED
+#ifdef LIBXML_EXPR_ENABLED
 xmlExpExpDerive
 #endif
-#ifdef LIBXML_REGEXP_ENABLED
+#ifdef LIBXML_EXPR_ENABLED
 xmlExpFree
 #endif
-#ifdef LIBXML_REGEXP_ENABLED
+#ifdef LIBXML_EXPR_ENABLED
 xmlExpFreeCtxt
 #endif
-#ifdef LIBXML_REGEXP_ENABLED
+#ifdef LIBXML_EXPR_ENABLED
 xmlExpGetLanguage
 #endif
-#ifdef LIBXML_REGEXP_ENABLED
+#ifdef LIBXML_EXPR_ENABLED
 xmlExpGetStart
 #endif
-#ifdef LIBXML_REGEXP_ENABLED
+#ifdef LIBXML_EXPR_ENABLED
 xmlExpIsNillable
 #endif
-#ifdef LIBXML_REGEXP_ENABLED
+#ifdef LIBXML_EXPR_ENABLED
 xmlExpMaxToken
 #endif
-#ifdef LIBXML_REGEXP_ENABLED
+#ifdef LIBXML_EXPR_ENABLED
 xmlExpNewAtom
 #endif
-#ifdef LIBXML_REGEXP_ENABLED
+#ifdef LIBXML_EXPR_ENABLED
 xmlExpNewCtxt
 #endif
-#ifdef LIBXML_REGEXP_ENABLED
+#ifdef LIBXML_EXPR_ENABLED
 xmlExpNewOr
 #endif
-#ifdef LIBXML_REGEXP_ENABLED
+#ifdef LIBXML_EXPR_ENABLED
 xmlExpNewRange
 #endif
-#ifdef LIBXML_REGEXP_ENABLED
+#ifdef LIBXML_EXPR_ENABLED
 xmlExpNewSeq
 #endif
-#ifdef LIBXML_REGEXP_ENABLED
+#ifdef LIBXML_EXPR_ENABLED
 xmlExpParse
 #endif
-#ifdef LIBXML_REGEXP_ENABLED
+#ifdef LIBXML_EXPR_ENABLED
 xmlExpRef
 #endif
-#ifdef LIBXML_REGEXP_ENABLED
+#ifdef LIBXML_EXPR_ENABLED
 xmlExpStringDerive
 #endif
-#ifdef LIBXML_REGEXP_ENABLED
+#ifdef LIBXML_EXPR_ENABLED
 xmlExpSubsume
 #endif
 xmlFileClose
diff --git a/xmlIO.c b/xmlIO.c
index 5482cb34..532a492c 100644
--- a/xmlIO.c
+++ b/xmlIO.c
@@ -41,6 +41,13 @@
 #include <direct.h>
 #endif
 
+#if defined(_WIN32) && defined(_MSC_VER)
+#include <winapifamily.h>
+#if defined(WINAPI_FAMILY_PARTITION) && WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP) && !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
+#define getenv(x) NULL
+#endif
+#endif
+
 #ifndef S_ISDIR
 #  ifdef _S_ISDIR
 #    define S_ISDIR(x) _S_ISDIR(x)
@@ -3768,11 +3775,13 @@ xmlParserGetDirectory(const char *filename) {
         if (cur == dir) dir[1] = 0;
 	else *cur = 0;
 	ret = xmlMemStrdup(dir);
+#if !defined(WINAPI_FAMILY_PARTITION) || !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP) || WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
     } else {
         if (getcwd(dir, 1024) != NULL) {
 	    dir[1023] = 0;
 	    ret = xmlMemStrdup(dir);
 	}
+#endif
     }
     return(ret);
 #undef IS_XMLPGD_SEP
diff --git a/xmlmemory.c b/xmlmemory.c
index 892d50c3..b02c9ad5 100644
--- a/xmlmemory.c
+++ b/xmlmemory.c
@@ -39,6 +39,13 @@ static xmlMutexPtr xmlMemMutex = NULL;
 
 void xmlMallocBreakpoint(void);
 
+#if defined(_WIN32) && defined(_MSC_VER)
+#include <winapifamily.h>
+#if defined(WINAPI_FAMILY_PARTITION) && WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP) && !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
+#define getenv(x) NULL
+#endif
+#endif
+
 /************************************************************************
  *									*
  *		Macros, variables and associated types			*
diff --git a/xmlmodule.c b/xmlmodule.c
index 44eba066..cfc8c900 100644
--- a/xmlmodule.c
+++ b/xmlmodule.c
@@ -314,7 +314,15 @@ xmlModulePlatformSymbol(void *handle, const char *name, void **symbol)
 static void *
 xmlModulePlatformOpen(const char *name)
 {
+#if defined(WINAPI_FAMILY_PARTITION) && WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP) && !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
+    WCHAR wlpName[MAX_PATH];
+    if (MultiByteToWideChar(CP_UTF8, 0, name, -1, wlpName, MAX_PATH) == 0) {
+        return NULL;
+    }
+    return LoadPackagedLibrary(wlpName, 0);
+#else
     return LoadLibraryA(name);
+#endif
 }
 
 /*
